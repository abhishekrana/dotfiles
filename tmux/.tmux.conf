# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename off
set-option -g set-titles on

# set -g default-terminal 'screen-256color'
# set -ga terminal-overrides ',screen-256color:Tc'
# set -g default-terminal 'tmux-256color'
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# set t_8f=^[[38;2;%lu;%lu;%lum  " Needed in tmux
# set t_8b=^[[48;2;%lu;%lu;%lum  " Ditto

# # Add truecolor support
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# # Default terminal is 256 colors
# set -g default-terminal "screen-256color"

# set-option -sa terminal-overrides ",xterm:Tc"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "xterm"
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

set -g status-keys vi
set -g history-limit 50000

setw -g mode-keys vi
#setw -g mouse on
setw -g monitor-activity on
setw -g visual-activity off

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n S-Up select-pane -t :.-
bind -n S-Down select-pane -t :.+

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 5
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
set -g status-right '#[fg=black,bg=green] #(nvidia-smi | head -9 | tail -1 | cut -d " " -f 19-24) #[default] #[fg=white]%H:%M#[default]'

bind-key -n C-h previous-window
bind-key -n C-l next-window
#bind-key -n C-a next-window
#bind-key -n C-m next-window; send-keys Up Enter
# bind-key C-m next; send-keys Up Enter

#bind-key -n C-m next-window -a "#{pane_current_path}" \; send-keys Up ;
# bind-key C-b next\; send-keys Up Enter \; send-keys ls Enter
#bind-key C-b next\; send-keys Up Enter
# bind-key C-b next\; send-keys ./run.sh Enter
# bind-key C-b select-window -t Run\; send-keys ./run.sh Enter
bind-key C-b next\; send-keys %edit Space func.py Enter\; run-shell "sleep .1s"\; send-keys :q Enter 


# Open new tab in pwd
bind c new-window -c "#{pane_current_path}"


# # Mouse Off with ^B m
# bind m \
# 	set-option -g mouse off \;\
# 	display 'Mouse: OFF'

# # Mouse On with ^B M
# bind M \
# 	set-option -g mouse on \;\
# 	display 'Mouse: ON'


# Solves vim rendering issue inside tmux
# set-window-option -g utf8 on
# set-window-option -g UTF8 on

# Focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

bind-key h swap-window -t -1
bind-key l swap-window -t +1
bind-key i swap-window -t -1
bind-key o swap-window -t +1

# This tmux statusbar config was created by tmuxline.vim
# set -g status-justify "left"
# set -g status "on"
# set -g status-attr "none"
# set -g message-command-bg "colour245"
# set -g status-left-length "100"
# set -g pane-active-border-fg "colour136"
# set -g status-bg "colour254"
# set -g message-command-fg "colour254"
# set -g pane-border-fg "colour245"
# set -g message-bg "colour245"
# set -g status-left-attr "none"
# set -g status-right-attr "none"
# set -g status-right-length "100"
# set -g message-fg "colour254"
# setw -g window-status-fg "colour245"
# setw -g window-status-attr "none"
# setw -g window-status-activity-bg "colour254"
# setw -g window-status-activity-attr "none"
# setw -g window-status-activity-fg "colour136"
# setw -g window-status-separator ""
# setw -g window-status-bg "colour254"


# This tmux statusbar config was created by tmuxline.vim
# Tmuxline_statusline_3_solarized8_light
set -g status-justify "left"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "#586e75"
set -g status-left-length "100"
set -g pane-active-border-fg "#586e75"
set -g status-bg "#839496"
set -g message-command-fg "#eee8d5"
set -g pane-border-fg "#839496"
set -g message-bg "#586e75"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "#eee8d5"
setw -g window-status-fg "#eee8d5"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "#839496"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "#eee8d5"
setw -g window-status-separator ""
setw -g window-status-bg "#839496"


set -g status-left "#[fg=#586e75,bg=#eee8d5] #S #[fg=#eee8d5,bg=#839496,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#586e75,bg=#839496,nobold,nounderscore,noitalics]#[fg=#eee8d5,bg=#586e75] #(nvidia-smi | head -9 | tail -1 | awk '{print $9 $10 $11}') | %Y-%m-%d | %H:%M #[fg=#eee8d5,bg=#586e75,nobold,nounderscore,noitalics]#[fg=#586e75,bg=#eee8d5] #h "
setw -g window-status-format "#[fg=#eee8d5,bg=#839496] #I |#[fg=#eee8d5,bg=#839496] #W "
setw -g window-status-current-format "#[fg=#839496,bg=#586e75,nobold,nounderscore,noitalics]#[fg=#eee8d5,bg=#586e75] #I |#[fg=#eee8d5,bg=#586e75] #W #[fg=#586e75,bg=#839496,nobold,nounderscore,noitalics]"


# set -g status-left "#[fg=colour254,bg=colour136,bold] #S #[fg=colour136,bg=colour254,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=colour245,bg=colour254,nobold,nounderscore,noitalics]#[fg=colour254,bg=colour245] #(nvidia-smi | head -9 | tail -1 | awk '{print $9 $10 $11}') | %Y-%m-%d | %H:%M #[fg=colour136,bg=colour245,nobold,nounderscore,noitalics]#[fg=colour254,bg=colour136] #h "

# setw -g window-status-format "#[fg=colour245,bg=colour254] #I |#[fg=colour245,bg=colour254] #W "
# setw -g window-status-current-format "#[fg=colour254,bg=colour245,nobold,nounderscore,noitalics]#[fg=colour254,bg=colour245] #I |#[fg=colour254,bg=colour245] #W #[fg=colour245,bg=colour254,nobold,nounderscore,noitalics]"
# setw -g window-status-format "#[fg=colour245,bg=colour254] #I |#[fg=colour245,bg=colour254] #W "
# setw -g window-status-current-format "#[fg=colour254,bg=colour245,nobold,nounderscore,noitalics]#[fg=colour254,bg=colour136] #I |#[fg=colour254,bg=colour136] #W #[fg=colour245,bg=colour254,nobold,nounderscore,noitalics]"


### PLUGINS ###
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-pain-control'

## tmux-resurrect
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

## tmux-continuum
# last saved environment is automatically restored when tmux is started.
#set -g @continuum-restore 'on'
#set -g @resurrect-capture-pane-contents 'on'

## tmux-sidebar
set -g @sidebar-tree-position 'right'
set -g @sidebar-tree-command 'tree -C'
# set -g @sidebar-tree-width '60'
# Change key binding
# set -g @sidebar-tree 'e'	


# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_selection 'clipboard' # or 'secondary' or 'clipboard'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


### Notes

## tmux:
#	prefix ,			Rename window
#	prefix + I			Install the plugin.
#	prefix + U			Update the plugin.
#	prefix + alt + u	Uninstall the plugin list.

## tmux-resurrect:
#	prefix + Ctrl-s		Save
#	prefix + Ctrl-r		Restore

## tmux-logging:
#	prefix + alt + p			Screen capture
#	prefix + alt + shift + p	Save complete history

## tmux-pain-control
#  Navigation
#	prefix + h and prefix + C-h	select pane on the left
#	prefix + j and prefix + C-j	select pane below the current one
#	prefix + k and prefix + C-k	select pane above
#	prefix + l and prefix + C-l	select pane on the right
#  Resizing panes
#	prefix + shift + h	resize current pane 5 cells to the left
#	prefix + shift + j	resize 5 cells in the down direction
#	prefix + shift + k	resize 5 cells in the up direction
#	prefix + shift + l	resize 5 cells to the right

## tmux-sidebar
#	prefix + Tab

## tmux-yank
#	sudo apt-get install xsel # or xclip
 
# move-window -t 0
